// Add an event listener to the "Send" button
// This listens for a click event, processes user input, and displays the chatbot's response.
document.getElementById('send-button').addEventListener('click', () => {
    // Get the user's input from the input box
    const userInput = document.getElementById('user-input').value.trim();
    if (userInput) {
        // Display the user's input in the chat history
        addMessage('You', userInput);

        // Generate ELIZA's response using the getElizaResponse function
        const response = getElizaResponse(userInput);

        // Display ELIZA's response in the chat history
        addMessage('ELIZA', response);

        // Clear the input box for the next message
        document.getElementById('user-input').value = '';
    }
});

// Function to add a message to the chat history
// Parameters:
// - sender: The sender of the message ("You" or "ELIZA")
// - message: The message content
function addMessage(sender, message) {
    const chatHistory = document.getElementById('chat-history'); // Get the chat history container
    const messageElement = document.createElement('div'); // Create a new div for the message
    messageElement.textContent = `${sender}: ${message}`; // Format the message
    chatHistory.appendChild(messageElement); // Add the message to the chat history
    chatHistory.scrollTop = chatHistory.scrollHeight; // Scroll to the latest message
}

// Function to generate ELIZA's response based on user input
// Parameters:
// - input: The user's input message
// Returns: A response string generated by ELIZA
function getElizaResponse(input) {
    const lowerInput = input.toLowerCase(); // Convert input to lowercase for case-insensitive matching

    // Check for specific keywords and phrases in the input
    if (lowerInput.includes('i feel')) {
        return "Why do you feel that way?";
    } else if (lowerInput.includes('because')) {
        return "Is that the real reason?";
    } else if (lowerInput.includes('you are')) {
        return "What makes you think I am " + extractWordAfter('you are', lowerInput) + "?";
    } else if (lowerInput.includes('i am')) {
        return transformInput(input) + "? Why do you say that?";
    } else if (lowerInput.includes('my')) {
        return "Tell me more about your " + extractWordAfter('my', lowerInput) + ".";
    } else if (lowerInput.includes('hello') || lowerInput.includes('hi')) {
        return "Hello! How can I help you today?";
    } else if (lowerInput.includes('bye')) {
        return "Goodbye! It was nice talking to you.";
    } else if (lowerInput.includes('remember')) {
        return "Can you elaborate on what you mean by 'remember'?";
    } else if (lowerInput.includes('always')) {
        return "Can you think of a specific example of when that happens?";
    } else if (lowerInput.includes('love')) {
        return "Love is a complex emotion. Can you tell me more about it?";
    } else if (lowerInput.includes('why')) {
        return "Why do you think that is?";
    } else if (lowerInput.includes('like')) {
        return "What do you like about it?";
    } else if (lowerInput.includes('friend')) {
        return "Tell me more about your friend.";
    } else if (lowerInput.includes('sad')) {
        return "I'm sorry to hear that. What makes you feel this way?";
    } else if (lowerInput.includes('happy')) {
        return "That's wonderful to hear! What made you happy?";
    } else if (lowerInput.includes('angry')) {
        return "Why do you feel angry? Can you elaborate?";
    } else if (lowerInput.includes('dream')) {
        return "What do you dream about?";
    } else if (lowerInput.includes('mother') || lowerInput.includes('father')) {
        return "Tell me more about your family.";
    } else if (lowerInput.includes('work')) {
        return "How do you feel about your work?";
    } else if (lowerInput.includes('school') || lowerInput.includes('study')) {
        return "Do you enjoy learning new things?";
    } else if (lowerInput.includes('afraid') || lowerInput.includes('fear')) {
        return "What makes you feel afraid?";
    } else if (lowerInput.includes('help')) {
        return "What kind of help do you need?";
    } else if (lowerInput.includes('confused')) {
        return "Why do you feel confused?";
    } else if (lowerInput.includes('stress') || lowerInput.includes('stressed')) {
        return "What is causing you stress?";
    } else {
        return getRandomFallbackResponse(); // Use a fallback response if no match is found
    }
}

// Function to provide a random fallback response
// Returns: A randomly chosen fallback message
function getRandomFallbackResponse() {
    const fallbackResponses = [
        "Can you elaborate on that?",
        "Why do you say that?",
        "How does that make you feel?",
        "Can you tell me more?",
        "Thatâ€™s interesting. Why do you think so?"
    ];
    return fallbackResponses[Math.floor(Math.random() * fallbackResponses.length)];
}

// Helper function to extract the word after a given keyword in a string
// Parameters:
// - keyword: The keyword to look for
// - text: The text to search within
// Returns: The word following the keyword, or "something" if no word is found
function extractWordAfter(keyword, text) {
    const words = text.split(' '); // Split the text into words
    const index = words.indexOf(keyword); // Find the index of the keyword
    return index !== -1 && index + 1 < words.length ? words[index + 1] : "something"; // Return the next word or "something"
}

// Function to transform user input into a mirrored perspective
// Parameters:
// - input: The user's input string
// Returns: A transformed string with mirrored perspective
function transformInput(input) {
    const replacements = {
        "i am": "you are",
        "you are": "I am",
        "i": "you",
        "my": "your",
        "your": "my"
    };

    const words = input.split(' '); // Split the input into words
    return words.map(word => replacements[word.toLowerCase()] || word).join(' '); // Replace words based on the replacements map
}
